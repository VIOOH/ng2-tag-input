{"version":3,"file":"tag.component.js","sourceRoot":"","sources":["../../../../modules/components/tag/tag.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    TemplateRef,\r\n    ElementRef,\r\n    HostListener,\r\n    ViewChild,\r\n    ChangeDetectorRef,\r\n    Renderer2\r\n} from '@angular/core';\r\n\r\nimport { TagModel } from '../../core';\r\nimport { TagRipple } from '../tag';\r\n\r\n// angular universal hacks\r\n/* tslint:disable-next-line */\r\nconst KeyboardEvent = (global as any).KeyboardEvent;\r\n\r\n// mocking navigator\r\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\r\n    userAgent: 'Chrome',\r\n    vendor: 'Google Inc'\r\n};\r\n\r\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\n\r\n@Component({\r\n    selector: 'tag',\r\n    templateUrl: './tag.template.html',\r\n    styleUrls: [ './tag-component.style.scss' ]\r\n})\r\nexport class TagComponent {\r\n    /**\r\n     * @name model {TagModel}\r\n     */\r\n    @Input() public model: TagModel;\r\n\r\n    /**\r\n     * @name readonly {boolean}\r\n     */\r\n    @Input() public readonly: boolean;\r\n\r\n    /**\r\n     * @name removable {boolean}\r\n     */\r\n    @Input() public removable: boolean;\r\n\r\n    /**\r\n     * @name editable {boolean}\r\n     */\r\n    @Input() public editable: boolean;\r\n\r\n    /**\r\n     * @name template {TemplateRef<any>}\r\n     */\r\n    @Input() public template: TemplateRef<any>;\r\n\r\n    /**\r\n     * @name displayBy {string}\r\n     */\r\n    @Input() public displayBy: string;\r\n\r\n    /**\r\n     * @name identifyBy {string}\r\n     */\r\n    @Input() public identifyBy: string;\r\n\r\n    /**\r\n     * @name index {number}\r\n     */\r\n    @Input() public index: number;\r\n\r\n    /**\r\n     * @name hasRipple\r\n     */\r\n    @Input() public hasRipple: boolean;\r\n\r\n    /**\r\n     * @name disabled\r\n     */\r\n    @Input() public disabled = false;\r\n\r\n    /**\r\n     * @name onSelect\r\n     * @type {EventEmitter<TagModel>}\r\n     */\r\n    @Output() public onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onRemove\r\n     * @type {EventEmitter<TagModel>}\r\n     */\r\n    @Output() public onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onBlur\r\n     * @type {EventEmitter<TagModel>}\r\n     */\r\n    @Output() public onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onKeyDown\r\n     * @type {EventEmitter<any>}\r\n     */\r\n    @Output() public onKeyDown: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /**\r\n     * @name onTagEdited\r\n     * @type {EventEmitter<any>}\r\n     */\r\n    @Output() public onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name editModeActivated\r\n     * @type {boolean}\r\n     */\r\n    public editModeActivated = false;\r\n\r\n    /**\r\n     * @name rippleState\r\n     * @type {string}\r\n     */\r\n    public rippleState = 'none';\r\n\r\n    /**\r\n     * @name ripple {TagRipple}\r\n     */\r\n    @ViewChild(TagRipple) public ripple: TagRipple;\r\n\r\n    constructor(public element: ElementRef,\r\n                public renderer: Renderer2,\r\n                private cdRef: ChangeDetectorRef) {}\r\n\r\n    /**\r\n     * @name select\r\n     */\r\n    public select($event?: MouseEvent): void {\r\n        if (this.readonly || this.disabled) {\r\n            return;\r\n        }\r\n\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.focus();\r\n\r\n        this.onSelect.emit(this.model);\r\n    }\r\n\r\n    /**\r\n     * @name remove\r\n     */\r\n    public remove(): void {\r\n        this.onRemove.emit(this);\r\n    }\r\n\r\n    /**\r\n     * @name focus\r\n     */\r\n    public focus(): void {\r\n        this.element.nativeElement.focus();\r\n    }\r\n\r\n    /**\r\n     * @name keydown\r\n     * @param event\r\n     */\r\n    @HostListener('keydown', ['$event'])\r\n    public keydown(event: KeyboardEvent): void {\r\n        if (this.editModeActivated) {\r\n            event.keyCode === 13 ? this.disableEditMode(event) : this.storeNewValue();\r\n            return;\r\n        }\r\n\r\n        this.onKeyDown.emit({event, model: this.model});\r\n    }\r\n\r\n    /**\r\n     * @name blink\r\n     */\r\n    public blink(): void {\r\n        const classList = this.element.nativeElement.classList;\r\n        classList.add('blink');\r\n\r\n        setTimeout(() => classList.remove('blink'), 50);\r\n    }\r\n\r\n    /**\r\n     * @name toggleEditMode\r\n     */\r\n    public toggleEditMode(): void {\r\n        const classList = this.element.nativeElement.classList;\r\n        const className = 'tag--editing';\r\n\r\n        if (this.editModeActivated) {\r\n            this.storeNewValue();\r\n        } else {\r\n            this.element.nativeElement.querySelector('[contenteditable]').focus();\r\n        }\r\n\r\n        this.editModeActivated = !this.editModeActivated;\r\n        this.editModeActivated ? classList.add(className) : classList.remove(className);\r\n    }\r\n\r\n    /**\r\n     * @name onBlurred\r\n     * @param event\r\n     */\r\n    public onBlurred(event: any): void {\r\n        const newValue: string = event.target.innerText;\r\n        this.toggleEditMode();\r\n        const result = typeof this.model === 'string' ? newValue :\r\n            {[this.identifyBy]: newValue, [this.displayBy]: newValue};\r\n        this.onBlur.emit(result);\r\n    }\r\n\r\n    /**\r\n     * @name getDisplayValue\r\n     * @param item\r\n     * @returns {string}\r\n     */\r\n    public getDisplayValue(item: TagModel): string {\r\n        return typeof item === 'string' ? item : item[this.displayBy];\r\n    }\r\n\r\n    /**\r\n     * @desc returns whether the ripple is visible or not\r\n     * only works in Chrome\r\n     * @name isRippleVisible\r\n     * @returns {boolean}\r\n     */\r\n    public isRippleVisible(): boolean {\r\n        return !this.readonly &&\r\n            !this.editModeActivated &&\r\n            isChrome &&\r\n            this.hasRipple;\r\n    }\r\n\r\n    /**\r\n     * @name getContentEditableText\r\n     * @returns {string}\r\n     */\r\n    private getContentEditableText(): string {\r\n        return this.element.nativeElement.querySelector('[contenteditable]').innerText.trim();\r\n    }\r\n\r\n    /**\r\n     * @name disableEditMode\r\n     * @param $event\r\n     */\r\n    private disableEditMode($event: KeyboardEvent): void {\r\n        this.editModeActivated = false;\r\n        $event.preventDefault();\r\n\r\n        this.cdRef.detectChanges();\r\n    }\r\n\r\n    /**\r\n     * @name storeNewValue\r\n     */\r\n    private storeNewValue(): void {\r\n        const input = this.getContentEditableText();\r\n\r\n        const exists = (model: TagModel) => {\r\n            return typeof model === 'string' ?\r\n                model === input :\r\n                model[this.identifyBy] === input;\r\n        };\r\n\r\n        // if the value changed, replace the value in the model\r\n        if (exists(this.model)) {\r\n            const itemValue = this.model[this.identifyBy];\r\n\r\n            this.model = typeof this.model === 'string' ? input :\r\n                {[this.identifyBy]: itemValue, [this.displayBy]: itemValue};\r\n\r\n            // emit output\r\n            this.onTagEdited.emit(this.model);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name isDeleteIconVisible\r\n     * @returns {boolean}\r\n     */\r\n    private isDeleteIconVisible(): boolean {\r\n        return !this.readonly &&\r\n                !this.disabled &&\r\n                this.removable &&\r\n                !this.editModeActivated;\r\n    }\r\n}\r\n"]}